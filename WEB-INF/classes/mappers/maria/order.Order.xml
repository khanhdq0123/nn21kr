<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order.OrderDAO">

	<select id="selectCommonCodeInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT * FROM common_code
	</select>
	
	<insert id="getOrdNo" parameterType="com.nn21.dto.SequenceDto">
		insert into sq_ord_mst(seq) values(0)
		<selectKey keyProperty="ord_no" resultType="int" >select last_insert_id()</selectKey>
	</insert>

	<select id="selectOrderList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select m.ord_no
			,m.ord_typ
			,case when(m.ord_typ = '1') then '운송접수' when(m.ord_typ = '2') then '보관접수' when(m.ord_typ = '3') then '견적접수'
			 when(m.ord_typ = '4') then '원산지접수' when(m.ord_typ = '5') then '통관접수' end as ord_typ_nm
			,m.send_no
			, (select v.vendor_nm from ven_vendorinfo v where v.vendor_no = m.send_no) as send_nm
			,m.receive_no
			, (select v.vendor_nm from ven_vendorinfo v where v.vendor_no = m.receive_no) as receive_nm
			,m.send_trade_comp_no
			,m.receive_trade_comp_no
			,m.send_cc_comp_no
			,m.receive_cc_comp_no
			,m.shipping_region_no
			,m.send_region_no
			,m.receive_region_no
			, (select r.region_nm from tb_region r where r.code = m.shipping_region_no) as shipping_region_nm
			, (select r.region_nm from tb_region r where r.code = m.send_region_no) as send_region_nm
			, (select r.region_nm from tb_region r where r.code = m.receive_region_no) as receive_region_nm
			, DATE_FORMAT(m.start_dt, '%Y-%m-%d %T') as start_dt
			, DATE_FORMAT(m.arrive_dt, '%Y-%m-%d %T') as arrive_dt
			, DATE_FORMAT(m.shipment_dt, '%Y-%m-%d %T') as shipment_dt
			,m.transport_way
			,(select code_nm from sys_codeinfo c where c.code_cd = m.transport_way) as transport_way_nm
			,m.e_commence_yn
			,m.charge_target_typ
			,m.payment_method_typ
			,m.start_vendor_no
			,m.transfer_vendor_no
			,m.arrive_vendor_no
			, (select v.vendor_nm from ven_vendorinfo v where v.vendor_no = m.start_vendor_no) as start_vendor_nm
			, (select v.vendor_nm from ven_vendorinfo v where v.vendor_no = m.transfer_vendor_no) as transfer_vendor_nm
			, (select v.vendor_nm from ven_vendorinfo v where v.vendor_no = m.arrive_vendor_no) as arrive_vendor_nm
			,m.doc_req_cer_origin_yn
			,m.doc_req_product_yn
			,m.doc_req_fta_yn
			,m.doc_req_su_yn
			,m.stat_cd
			,m.receive_dt
			,m.release_dt
			,m.reg_id
			, DATE_FORMAT(m.reg_dt, '%Y-%m-%d') as reg_dt
			,m.mod_id
			, DATE_FORMAT(m.mod_dt, '%Y-%m-%d %T') as mod_dt
			, (select concat(i.item_nm) as item_nm from ord_item i where i.ord_no = m.ord_no group by i.ord_no) as item_nm
			, (select count(0) from ord_item i where i.ord_no = m.ord_no) as item_cnt
			, (select sum(qty) from ord_item i where i.ord_no = m.ord_no) as qty
			, (select sum(amt) from ord_item i where i.ord_no = m.ord_no) as amt
			, (select sum(tot_amt) from ord_item i where i.ord_no = m.ord_no) as tot_amt
			, (select sum(box_qty) from ord_item i where i.ord_no = m.ord_no) as box_qty
			, (select round(sum(kg),1) from ord_item i where i.ord_no = m.ord_no) as kg
			, (select round(sum(cbm),1) from ord_item i where i.ord_no = m.ord_no) as cbm
		from ord_mst m
		where (m.start_vendor_no = #{vendor_no} or m.transfer_vendor_no = #{vendor_no} or m.arrive_vendor_no = #{vendor_no} or m.send_no = #{vendor_no} or m.receive_no = #{vendor_no})
		<if test='ord_typ != null and ord_typ != ""'>
		and m.ord_typ = #{ord_typ}
		</if>		
		order by m.reg_dt desc

	</select>




	<select id="selectOrdItemList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * 
		from ord_item 
		where ord_no = #{ord_no}
	</select>

	<select id="selectRecentOrdItemList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select t.date_to_from
		, t.item_nm 
		from (
				select concat(DATE_FORMAT(m.start_dt, '%Y-%m-%d'), ' ~ ',DATE_FORMAT(m.arrive_dt, '%Y-%m-%d') ) as date_to_from
					,i.item_nm
				from ord_mst m
				inner join ord_item i on m.ord_no = i.ord_no
				where m.send_no = #{send_no}  
				and m.receive_no = #{receive_no}
				and i.item_nm != ''
				and i.item_nm is not null				
				limit 30
		) t
		group by t.date_to_from, t.item_nm		
		order by t.date_to_from, t.item_nm	
	</select>
	
	<select id="selectOrdMstHstList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select m.ord_mst_hst_no
			,m.ord_no
			,m.task_cd
			,c.code_nm as task_nm
			,m.task_dtl
			,m.reg_id
			,DATE_FORMAT(m.reg_dt, '%Y-%m-%d') as reg_dt
		from ord_mst_hst m
		inner join sys_codeinfo c on m.task_cd = c.code_cd
		where m.ord_no = #{ord_no}
		order by m.reg_dt
	</select>

	<insert id="insertOrdMst" parameterType="java.util.HashMap">
	insert into ord_mst(
		ord_no
		,ord_typ
		,send_no
		,receive_no
		,send_trade_comp_no
		,receive_trade_comp_no
		,send_cc_comp_no
		,receive_cc_comp_no
		,shipping_region_no
		,send_region_no
		,receive_region_no
		,start_dt
		,arrive_dt
		,shipment_dt
		,transport_way
		,e_commence_yn
		,charge_target_typ
		,charge_memo
		,payment_method_typ
		,start_vendor_no
		,transfer_vendor_no
		,arrive_vendor_no
<!-- 		,doc_req_cer_origin_yn -->
		,doc_req_product_yn
		,doc_req_fta_yn
		,doc_req_su_yn
		,customer_memo
		,business_memo
		,stat_cd
		,receive_dt
		,release_dt
		,reg_id
		,reg_dt
	) values (
		#{ord_no}
		,#{ord_typ}
		,#{send_no}
		,#{receive_no}
		,#{send_trade_comp_no}
		,#{receive_trade_comp_no}
		,#{send_cc_comp_no}
		,#{receive_cc_comp_no}
		,#{shipping_region_no}
		,#{send_region_no}
		,#{receive_region_no}
		,#{start_dt}
		,#{arrive_dt}
		,#{shipment_dt}
		,#{transport_way}
		,#{e_commence_yn}
		,#{charge_target_typ}
		,#{charge_memo}
		,#{payment_method_typ}
		,#{start_vendor_no}
		,#{transfer_vendor_no}
		,#{arrive_vendor_no}
<!-- 		,#{doc_req_cer_origin_yn} -->
		,#{doc_req_product_yn}
		,#{doc_req_fta_yn}
		,#{doc_req_su_yn}
		,#{customer_memo}
		,#{business_memo}
		,#{stat_cd}
		,#{receive_dt}
		,#{release_dt}
		,#{reg_id}
		,now()
      )
	</insert>

	<update id="updateOrdMst" parameterType="java.util.HashMap">
		update ord_mst set 
			ord_typ = #{ord_typ}
			,send_no = #{send_no}
			,receive_no = #{receive_no}
			,send_trade_comp_no = #{send_trade_comp_no}
			,receive_trade_comp_no = #{receive_trade_comp_no}
			,send_cc_comp_no = #{send_cc_comp_no}
			,receive_cc_comp_no = #{receive_cc_comp_no}
			,shipping_region_no = #{shipping_region_no}
			,send_region_no = #{send_region_no}
			,receive_region_no = #{receive_region_no}
			,start_dt = #{start_dt}
			,arrive_dt = #{arrive_dt}
			,shipment_dt = #{shipment_dt}
			,transport_way = #{transport_way}
			,e_commence_yn = #{e_commence_yn}
			,charge_target_typ = #{charge_target_typ}
			,charge_memo = #{charge_memo}
			,payment_method_typ = #{payment_method_typ}
			,start_vendor_no = #{start_vendor_no}
			,transfer_vendor_no = #{transfer_vendor_no}
			,arrive_vendor_no = #{arrive_vendor_no}
			,doc_req_product_yn = #{doc_req_product_yn}
			,doc_req_fta_yn = #{doc_req_fta_yn}
			,doc_req_su_yn = #{doc_req_su_yn}
			,customer_memo = #{customer_memo}
			,business_memo = #{business_memo}
			,stat_cd = #{stat_cd}
			,receive_dt = #{receive_dt}
			,release_dt = #{release_dt}
			,mod_id = #{mod_id}
			,mod_dt = now()
		where ord_no = #{ord_no}
	</update>

	<select id="selectOrdImportAttachList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select da.ord_no
				,da.att_seq
				,CAST( da.filename_txt AS CHAR (10000) CHARACTER SET UTF8) AS filename_txt
				,da.attachfile_txt
		from ord_import_attach da
		where da.ord_no = #{ord_no}
	</select>
	
	<select id="selectOrdExportAttachList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select da.ord_no
				,da.att_seq
				,CAST( da.filename_txt AS CHAR (10000) CHARACTER SET UTF8) AS filename_txt
				,da.attachfile_txt
		from ord_export_attach da
		where da.ord_no = #{ord_no}
	</select>

	<insert id="insertOrdImportAttach" parameterType="java.util.HashMap">
		INSERT INTO ord_import_attach (
			ord_no
			,filename_txt
			,attachfile_txt
			,reg_id
			,reg_dt
		) VALUES (
			#{ord_no}
			,#{filename_txt}
			,#{attachfile_txt}
			,#{reg_id}
			,NOW()
		)
	</insert>
	
	<insert id="insertOrdExportAttach" parameterType="java.util.HashMap">
		INSERT INTO ord_export_attach (
			ord_no
			,filename_txt
			,attachfile_txt
			,reg_id
			,reg_dt
		) VALUES (
			#{ord_no}
			,#{filename_txt}
			,#{attachfile_txt}
			,#{reg_id}
			,NOW()
		)
	</insert>

	<insert id="insertOrdItem" parameterType="java.util.HashMap">
	insert into ord_item(
		ord_no
		,hs_code
		,box_no
		,item_no_txt
		,item_nm
		,item_sty_no
		,item_material
		,qty
		,amt
		,tot_amt
		,box_qty
		,kg
		,cbm
		,qty_unit
		,amt_unit
		,box_qty_unit
		,reg_id
		,reg_dt
	) values (
		#{ord_no}
		,#{hs_code}
		,#{box_no}
		,#{item_no_txt}
		,#{item_nm}
		,#{item_sty_no}
		,#{item_material}
		,#{qty}
		,#{amt}
		,#{tot_amt}
		,#{box_qty}
		,#{kg}
		,#{cbm}
		,#{qty_unit}
		,#{amt_unit}
		,#{box_qty_unit}
		,#{reg_id}
		,now()
	)
	</insert>
	
	<insert id="insertOrdMstHst" parameterType="java.util.HashMap">
		INSERT INTO ord_mst_hst (
			ord_no
			,task_cd
			,task_dtl
			,reg_id
			,reg_dt
		) VALUES (
			#{ord_no}
			,#{task_cd}
			,#{task_dtl}
			,#{reg_id}
			,NOW()
		)
	</insert>
	
	<delete id="deleteOrdItem" parameterType="java.util.HashMap">
		delete from ord_item where ord_no = #{ord_no}
	</delete>


</mapper>